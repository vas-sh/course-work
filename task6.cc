#include <vector>
#include <memory> 
#include <map>
#include <iostream>

struct Cell {
	int i = 0, j = 0;    
};

struct Sector {
	std::vector<Cell> Cells;
	std::shared_ptr<int> Number = nullptr;
};

class Board {
    public:
        std::vector<Cell> Cells;
	    std::vector<Sector> Sectors;
    };

std::shared_ptr<int> ptrTo(int i) {
    return std::make_shared<int>(i);
}

    Board testCase1 = {
        {
            {0, 0}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7}, {0, 8}, {0, 9},
            {1, 0}, {1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 9},
            {2, 0}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9},
            {3, 0}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9},
            {4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9},
            {5, 0}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {5, 9},
            {6, 0}, {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {6, 9},
            {7, 0}, {7, 1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {7, 9},
            {8, 0}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}, {8, 9},
            {9, 0}, {9, 1}, {9, 2}, {9, 3}, {9, 4}, {9, 5}, {9, 6}, {9, 7}, {9, 8}, {9, 9},
        },
        {
            {{ {0, 0}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6} }, ptrTo(1)},
            {{ {0, 7}, {0, 8}, {0, 9}, {1, 7}, {1, 8}, {1, 9}, {2, 7}, {2, 8}, {2, 9} }, ptrTo(4)},
            {{ {1, 0}, {2, 0}, {3, 0} }, ptrTo(2)},
            {{ {1, 1}, {1, 2}, {1, 3}, {2, 1}, {2, 2}, {2, 3}, {3, 1}, {3, 2}, {3, 3} }, nullptr},
            {{ {1, 4}, {2, 4}, {3, 4} }, nullptr},
            {{ {1, 5}, {1, 6}, {2, 5}, {2, 6} }, nullptr},
            {{ {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9} }, nullptr},
            {{ {4, 0}, {4, 1}, {5, 0}, {5, 1}, {6, 0}, {6, 1} }, nullptr},
            {{ {4, 2}, {4, 3}, {5, 2}, {5, 3}, {6, 2}, {6, 3} }, ptrTo(3)},
            {{ {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9} }, nullptr},
            {{ {5, 4}, {5, 5}, {6, 4}, {6, 5}, {7, 4}, {7, 5}, {8, 4}, {8, 5} }, nullptr},
            {{ {5, 6}, {6, 6}, {7, 6}, {8, 6}, {9, 6} }, nullptr},
            {{ {5, 7}, {5, 8}, {5, 9}, {6, 7}, {6, 8}, {6, 9} }, nullptr},
            {{ {7, 7}, {7, 8}, {7, 9}, {8, 7}, {8, 8}, {8, 9}, {9, 7}, {9, 8}, {9, 9} }, ptrTo(4)}, 
            {{ {7, 0}, {7, 1}, {7, 2}, {8, 0}, {8, 1}, {8, 2} }, ptrTo(3)}, 
            {{ {7, 3}, {8, 3} }, nullptr},
            {{ {9, 0}, {9, 1}, {9, 2}, {9, 3}, {9, 4}, {9, 5} }, nullptr},
        }
    };

    void printBoard(const Board& board) {
        std::vector<std::vector<std::string>> output(10, std::vector<std::string>(10, "_"));
        for (const Sector& sector : board.Sectors) {
            if (sector.Number) {
                int i = sector.Cells[0].i;
                int j = sector.Cells[0].j;
                output[i][j] = std::to_string(*sector.Number);
            }
        }
        for (int i = 0; i < 10; ++i) {
            for (int j = 0; j < 10; ++j) {
                std::cout << "|" << output[i][j];
            }
            std::cout << "|" << std::endl;
        }
    }
    
int main() {
    printBoard(testCase1);
}